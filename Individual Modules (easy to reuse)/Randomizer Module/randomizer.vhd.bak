LIBRARY ieee;
USE ieee.math_real.ALL;   -- for UNIFORM, TRUNC functions
USE ieee.numeric_std.ALL; -- for TO_UNSIGNED function

ENTITY randomizer is 
port (
random_out: out std_logic_vector(4 downto 0)

);
END ENTITY;

ARCHITECTURE arc OF randomizer IS
BEGIN
PROCESS
  VARIABLE seed1, seed2: positive;               -- Seed values for random generator
  VARIABLE rand: real;                           -- Random real-number value in range 0 to 1.0
  VARIABLE int_rand: integer;                    -- Random integer value in range 0..4095
  VARIABLE stim: std_logic_vector(3 DOWNTO 0);  -- Random 12-bit stimulus
BEGIN

    UNIFORM(seed1, seed2, rand);                                   -- generate random number
    int_rand := INTEGER(TRUNC(rand*16.0));                       -- rescale to 0..4096, find integer part
    stim := std_logic_vector(to_unsigned(int_rand, stim'LENGTH));  -- convert to std_logic_vector
	 random_out <= stim;
	 
END PROCESS;
END ARCHITECTURE;